1－1 表の作成
> b01 <- read_csv("A02L01.csv") #ファイルの読み込み
Rows: 200 Columns: 3                                                           
-- Column specification --------------------
Delimiter: ","
chr (3): study, result, gender

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.
> b02 <- table(b01$study,b01$result)　#表の作成
         またはtable(b01[,1:2])　　　  #1:2はc(1,2)でもよい
         
         
         
prop.table　というものが割合を計算するもの        
> prop.table(b02)　なし　全体度数
                
                  合格 不合格
  勉強した       0.500  0.250
  勉強しなかった 0.125  0.125
> prop.table(b02,1)　１を入れると行の周辺度数による
                
                      合格    不合格
  勉強した       0.6666667 0.3333333
  勉強しなかった 0.5000000 0.5000000
> prop.table(b02,2)　2を入れると列の周辺度数による
                
                      合格    不合格
  勉強した       0.8000000 0.6666667
  勉強しなかった 0.2000000 0.3333333
  
  
 addmargins　というもので周辺度数を計算してくれます
> addmargins(b02)　なし　全体度数
                
                 合格 不合格 Sum
  勉強した        100     50 150
  勉強しなかった   25     25  50
  Sum             125     75 200
> addmargins(b02,1)　1を入れると列の周辺度数のみ
                
                 合格 不合格
  勉強した        100     50
  勉強しなかった   25     25
  Sum             125     75
> addmargins(b02,2)　2を入れると行の周辺度数のみ計算
                
                 合格 不合格 Sum
  勉強した        100     50 150
  勉強しなかった   25     25  50       
  
 パイプ演算子
 table(b01[,1:2]) %>%prop.table() %>%addmargins()
 tableで計算した結果を次の命令のprop.tableの中に送る
 prop.tableで計算した結果をaddmarginsの中にいれる
 
 table(b01[,1:2]) %>% prop.table() %>%addmargins()
                result
study             合格 不合格   Sum
  勉強した       0.500  0.250 0.750
  勉強しなかった 0.125  0.125 0.250
  Sum            0.625  0.375 1.000



2－2　グラフの作成
ggplotでのグラフ作成
1.ggplot(DATA)でデータを指定
2.geom関数でグラフの種類を選ぶ
3.aes関数で項目（列）を指定する
4.レイヤーの重ね書きができる
5.オプションが多い
6.スクリプトを残しておく
> ggplot()+ #+で続く
　　　　　　　　#+の後に改行
        geom_point() #散布図
        geom_line()  #折れ線グラフ
        geom_bar()   #棒グラフ
        　　　　　　   (円グラフ)
        geom_histogram()  #ヒストグラム
        geom_box()  +     #箱ひげ図
        
        stat_smooth()+    #回帰直線
        
        theme()　　　      #背景など



2-2 散布図、折れ線グラフ(1)
#a01 というデータ
#aes(要素)x座標がA列、y座標がB列
#ggplot(a01)+geom_point(aes(x=A,y=B))
#スクリプトは+のあとに改行

> a01 <- read_csv("A02L02.csv")
Rows: 5 Columns: 3                                                             
-- Column specification --------------------
Delimiter: ","
chr (1): name1
dbl (2): A, B

i Use `spec()` to retrieve the full column specification for this data.
i Specify the column types or set `show_col_types = FALSE` to quiet this message.
> ggplot(a01,aes(x=A,y=B))+
+ geom_point()


(2)
#geom_lineで折れ線グラフ
#labs()で座標のラベルを設定
#データから自動で設定
#列の名前を工夫しておく
#themeで枠組みの色や軸の設定
#
#geom_line(color=2)は赤の線
#グラフはRStudioのExportで保存できる
#ggsave("ファイル名")でも保存可
#Rmarkdownでレポートにする

> ggplot(a01,aes(x=A,y=B))+
+ geom_line()+
+ labs(x="height",y="weight")+
+ theme(text=element_text(size=16))


(3)
レイヤーの重ね合わせをしてグラフを描画する
ggplot(データ)+
geom_point(mapping=aes(要素))+
geom_line(mapping=aes(要素))+
theme(フォントなど)



2－3　棒グラフ、積み上げグラフ、円グラフ(1)
#geom_bar()　のみ
#カテゴリーデータを集計する
> c01 <- read_csv("A02L03.csv")
> ggplot(c01,aes(x=A,y=freq)) + 
+ geom_bar(stat="identity")

#列の値をそのままグラフにする場合
#stat="identity"
> ggplot(b01,aes(x=study))+geom_bar()
